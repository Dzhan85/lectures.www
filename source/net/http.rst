Протокол HTTP
=============

.. note:: Список ресурсов:

    * `HTTP: протокол, который каждый разработчик должен знать (часть 1) <http://ruseller.com/lessons.php?rub=28&id=1726>`_
    * `HTTP: протокол, который каждый разработчик должен знать (часть 2) <http://ruseller.com/lessons.php?rub=28&id=1777>`_
    * `Основа www: протокол HTTP <http://www.4stud.info/web-programming/protocol-http.html>`_
    * `Перевод документа RFC 2068 на русский язык <http://www.lib.ru/WEBMASTER/rfc2068/>`_
    * `Гипертекстный протокол HTTP <http://book.itep.ru/4/45/http4561.htm>`_

Протокол HTTP это основа Веба, через него передается основная часть веб трафика.
HTTP является протоколом передачи данных 4го (прикладного) уровня стека протоколов TCP/IP.

Изначально создавался для передачи гипертекстовых документов в формате HTML,
но сейчас используется для передачи любых данных.
Также может выступать в роли транспорта для других протоколов прикладного уровня,
например SOAP, XML-RPC, JSON-RPC, WebDAV.

HTTP обеспечивает общение между множеством хостов и клиентов.
Общение между хостом и клиентом происходит в два этапа: запрос и ответ. Клиент формирует HTTP запрос, в ответ на который сервер дает ответ (сообщение).

.. image:: /_static/http1-request-response.png
    :alt: HTTP запрос и ответ

URI
---

Основным объектом манипуляции в `HTTP` является ресурс, на который указывает `URI` (`Uniform Resource Identifier` – уникальный идентификатор ресурса) в запросе клиента. Основными ресурсами являются хранящиеся на сервере файлы, но ими могут быть и другие логические (напр. каталог на сервере) или абстрактные объекты (напр. ISBN). Протокол `HTTP` позволяет указать способ представления (кодирования) одного и того же ресурса по различным параметрам: mime-типу, языку и т. д. Благодаря этой возможности клиент и веб-сервер могут обмениваться двоичными данными, хотя данный протокол является текстовым.

Структура URI:

Запрос
------

Ответ
-----

