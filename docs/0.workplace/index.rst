***********
Инструменты
***********

Операционная система
====================

`Операционная система` в данном курсе не имеет значения,
подойдет любая распространенная ОС с графическим интерфейсом.
Например `Linux`, `MacOS` или `Windows`.
Но в примерах будет использоваться ОС `Linux`.

Текстовый редактор
==================

.. seealso::

   :ref:`texteditor`

За текстовым редактором Веб-программист проводит 90% времени,
поэтому нужно ответственно подойти к этому выбору.
Можно использовать любой понятный вам и
удобный в использовании текстовый редактор.

Критериями должны стать:

* простата использования
* удобный интерфейс
* возможность гибкой настройки
* кроссплатформенность
* подсветка синтаксиса
* автодополнение кода

Все эти критерии удовлетворяют такие редакторы как `Vim` и `Emacs`.
Так же среди программистов встречаются менее функциональные `Bred3`,
`Notepad++`, `SublimeText` и другие.
Если нет времени на изучение редактора, отличным выбором будет `Visual Studio
Code <https://code.visualstudio.com>`_, в котором из коробки можно отлаживать
Python, управлять git и писать код с автодополнением и проверкой синтаксиса.

Веб-браузер
===========

Можно выбрать один из самых популярных браузеров, на сегодняшний день, `Mozilla
Firefox` или `Google Chrome` или любой другой соответствующий Веб-стандартам.

Система контроля версий
=======================

.. note::

   `Git самая популярная система контроля версий
   <https://rhodecode.com/insights/version-control-systems-2016>`_,
   по сути уже стандарт в отрасли.

В данном курсе для выполнения самостоятельных работ потребуются
знания системы контроля версий `git` и учетная запись в сервисе `GitHub`.

Системы контроля версий:

* git
* mercurial (hg)
* subversion (svn)

Социальные сети для разработчиков:

* `GitHub <https://github.com>`_ - использует `git`, исходный код закрыт
* `GitLab <https://gitlab.com>`_ - opensource аналог github
* `BitBucket <https://bitbucket.org>`_ - использует `git`, `mercurial`,
  исходный код закрыт
* `SourceForge <https://sourceforge.net>`_ - использует `subversion`, один из
  первых подобных сервисов
* `RhodeCode <https://rhodecode.com/>`_ - opensource проект, позволяет
  использовать в проектах любую систему контроля версий, на выбор (`git`, `hg`,
  `svn`).

Git
~~~

* `<http://progit.org/book/ru/>`_ - основная документация по Git. Нас будут
  интересовать первые три главы: введение, основы Git, ветвления в
  Git(слияния). Данный учебник является репозитарием на github и хостится как
  статический сайт при помощи сервиса Pages.
* `Git для начинающих <http://ruseller.com/lessons.php?rub=28&id=2035>`_
* `<http://githowto.com/ru>`_

github.com
~~~~~~~~~~

* `Установка Git и активация открытых ключей шифрования <http://help.github.com/linux-set-up-git/>`_
* `Создание репозитария <http://help.github.com/create-a-repo/>`_
* `Как скопировать чужой репозитарий <http://help.github.com/fork-a-repo/>`_
* `Внесение исправлений в чужие репозитарии <http://help.github.com/send-pull-requests/>`_
* `Социальные функции в Github <http://help.github.com/fork-a-repo/>`_
* `Pages - хостинг статического сайта. Сервис Pages позволяет хостить
  статический сайт на github. Причем сам сайт будет обычным репозитарием.
  <http://help.github.com/pages/>`_
